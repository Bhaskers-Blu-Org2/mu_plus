workspace:
  clean: all

trigger: none # will disable CI builds entirely

variables:
- group: SecMirrorCommon

steps:
- checkout: self
  clean: true

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7.x'
    architecture: 'x64'

- script: python -m pip install --upgrade pip
  displayName: 'Install/Upgrade pip'

- script: pip install -r requirements.txt --upgrade
  displayName: 'Install/Upgrade mu_build'

# Create a variable
- powershell: |
    Write-Host "##vso[task.setvariable variable=GIT_CREDS]projectmu:$(secmircom.pat)"
- script: |
    echo my pipeline variable is $(GIT_CREDS)

# Update dependencies
- task: PythonScript@0
  displayName: 'Update Dependencies'
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'SharedCryptoPkg/DriverBuilder.py'
    arguments: '--UPDATE'
    failOnStderr: false

# Update dependencies (to resolve nugets from previously resolved ext_deps)
- task: PythonScript@0
  displayName: 'Update Dependencies (Again)'
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'SharedCryptoPkg/DriverBuilder.py'
    arguments: '--UPDATE'
    failOnStderr: false

# Build and publish
- task: PythonScript@0
  displayName: 'Build and Ship'
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'SharedCryptoPkg/DriverBuilder.py'
    arguments: '--dump-version --api-key=$(NUGET_API_KEY)'
    failOnStderr: false

# Copy the Nuget Package
- task: CopyFiles@2
  displayName: 'Copy Nuget Pkg'
  inputs:
    contents: 'Build/**.nupkg'
    targetFolder: $(Build.ArtifactStagingDirectory)
# Copy the TXT file
- task: CopyFiles@2
  displayName: 'Copy TXT files'
  inputs:
    contents: 'Build/**.txt'
    targetFolder: $(Build.ArtifactStagingDirectory)

# Publish Build Artifacts
# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: PublishBuildArtifacts@1
  displayName: 'Publish NugetPackage'
  continueOnError: true
  condition: succeeded()
  inputs:
    artifactName: 'Nuget Package'

# publish to Nuget
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Uefibot_Mu_SharedCrypto'
    versioningScheme: byEnvVar
    versionEnvVar: NugetPackageVersion
    verbosityPush: 'detailed'
    configuration: 'SharedCryptoPkg/Driver/Mu-SharedCrypto.config.json'
